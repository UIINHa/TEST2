#include <windows.h>
#include <iostream>
#include <iomanip>
#include <thread>  // for sleep

int main() {
    HWND hwnd = FindWindowA(NULL, "AssaultCube");
    if (!hwnd) {
        std::cout << "AssaultCube 실행 중인지 확인하세요.\n";
        return 1;
    }

    DWORD pid = 0;
    GetWindowThreadProcessId(hwnd, &pid);

    HANDLE hProc = OpenProcess(PROCESS_VM_READ | PROCESS_QUERY_INFORMATION, FALSE, pid);
    if (!hProc) {
        std::cout << "프로세스 열기 실패\n";
        return 1;
    }

    // 좌표 및 탄약 주소 (float, int)
    uintptr_t xAddr    = 0x00FEA24C;
    uintptr_t yAddr    = 0x00FEA250;
    uintptr_t zAddr    = 0x00FEA254;
    uintptr_t ammoAddr = 0x00FEA398;

    float x = 0.0f, y = 0.0f, z = 0.0f;
    int ammo = 0;

    std::cout << std::fixed << std::setprecision(2);

    while (true) {
        // 값 읽기
        ReadProcessMemory(hProc, (LPCVOID)xAddr, &x, sizeof(float), NULL);
        ReadProcessMemory(hProc, (LPCVOID)yAddr, &y, sizeof(float), NULL);
        ReadProcessMemory(hProc, (LPCVOID)zAddr, &z, sizeof(float), NULL);
        ReadProcessMemory(hProc, (LPCVOID)ammoAddr, &ammo, sizeof(int), NULL);

        // 콘솔 클리어 (Windows 전용 방식)
        system("cls");

        // 출력
        std::cout << "현재 위치:\n";
        std::cout << "  X = " << x << "\n";
        std::cout << "  Y = " << y << "\n";
        std::cout << "  Z = " << z << "\n\n";
        std::cout << "남은 탄약 수: " << ammo << "\n";

        // 100ms 대기
        std::this_thread::sleep_for(std::chrono::milliseconds(100));
    }

    CloseHandle(hProc);
    return 0;
}
