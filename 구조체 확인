#include <windows.h>
#include <iostream>
#include <iomanip>

int main() {
    HWND hwnd = FindWindowA(NULL, "AssaultCube");
    if (!hwnd) {
        std::cout << "AssaultCube 실행 중인지 확인하세요.\n";
        return 1;
    }

    DWORD pid = 0;
    GetWindowThreadProcessId(hwnd, &pid);

    HANDLE hProc = OpenProcess(PROCESS_VM_READ | PROCESS_QUERY_INFORMATION, FALSE, pid);
    if (!hProc) {
        std::cout << "프로세스 열기 실패\n";
        return 1;
    }

    // 포인터 주소
    uintptr_t zPtrAddr = 0x00FEA254;     // Z 좌표 포인터
    uintptr_t ammoAddr = 0x00FEA398;     // 탄약 값 직접 저장된 주소

    DWORD playerBase = 0;
    ReadProcessMemory(hProc, (LPCVOID)zPtrAddr, &playerBase, sizeof(DWORD), NULL);

    std::cout << std::hex;
    std::cout << "[playerBase 주소] 0x" << playerBase << "\n\n";

    float x = 0, y = 0, z = 0;
    int ammo = 0;

    // 좌표 읽기
    ReadProcessMemory(hProc, (LPCVOID)(playerBase + 0x04), &x, sizeof(float), NULL);
    ReadProcessMemory(hProc, (LPCVOID)(playerBase + 0x08), &y, sizeof(float), NULL);
    ReadProcessMemory(hProc, (LPCVOID)(playerBase + 0x0C), &z, sizeof(float), NULL);

    // 탄약은 구조체 내 오프셋이 아니라 고정 주소에서 직접 읽기
    ReadProcessMemory(hProc, (LPCVOID)ammoAddr, &ammo, sizeof(int), NULL);

    std::cout << std::fixed << std::setprecision(2);
    std::cout << "내 위치:\n";
    std::cout << "  X = " << x << "\n";
    std::cout << "  Y = " << y << "\n";
    std::cout << "  Z = " << z << "\n\n";
    std::cout << "탄약 수 (전역): " << ammo << "\n";

    CloseHandle(hProc);
    return 0;
}
